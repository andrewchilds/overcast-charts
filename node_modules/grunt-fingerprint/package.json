{
  "name": "grunt-fingerprint",
  "description": "Assets versioning task for Grunt.",
  "version": "0.2.0",
  "homepage": "https://github.com/sapegin/grunt-fingerprint",
  "author": {
    "name": "Artem Sapegin",
    "url": "http://sapegin.me/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/sapegin/grunt-fingerprint.git"
  },
  "bugs": {
    "url": "https://github.com/sapegin/grunt-fingerprint/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/sapegin/grunt-fingerprint/blob/master/License.md"
    }
  ],
  "main": "tasks/fingerprint.js",
  "engines": {
    "node": "*"
  },
  "dependencies": {},
  "devDependencies": {
    "grunt": "~0.4.2",
    "grunt-contrib-jshint": "~0.8.0",
    "grunt-mocha-test": "~0.8.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.2"
  },
  "keywords": [
    "gruntplugin",
    "assets",
    "static",
    "files",
    "versioning"
  ],
  "readme": "# Assets versioning task for Grunt\n\n[![Build Status](https://travis-ci.org/sapegin/grunt-fingerprint.png)](https://travis-ci.org/sapegin/grunt-fingerprint)\n[![Built with Grunt](https://cdn.gruntjs.com/builtwith.png)](http://gruntjs.com/)\n\n## Installation\n\nThis plugin requires Grunt 0.4.\n\nInstall `grunt-fingerprint`:\n\n```\nnpm install grunt-fingerprint --save-dev\n```\n\nAdd somewhere in your `Gruntfile.js`:\n\n```javascript\ngrunt.loadNpmTasks('grunt-fingerprint');\n```\n\nInside your `Gruntfile.js` file add a section named `fingerprint`. See Parameters section below for details.\n\n\n## Parameters\n\nAll parameters supports [grunt.template](https://github.com/cowboy/grunt/blob/master/docs/api_template.md). \n\n### src `String|Array`\n\nArray of your static files (or string for single file). Newest file will be used to calculate fingerprint. Wildcards are supported.\n\n### filename `String`\n\nName of file where fingerprint will be saved. You can use `target` context variable here:\n\n```json\nfilename: '<%= target %>.txt'\n```\n\n### template `String`\n\nFingerprint file contents template. You can use `fingerprint` context variable here:\n\n```json\ntemplate: \"<?php define('FINGERPRINT', '<%= fingerprint %>'); ?>\"\n```\n\nIf `template` not specified only fingerprint will be written to file.\n\n\n## Config Example\n\n``` javascript\nfingerprint: {\n  assets: {\n    src: [\n      'js/*.js',\n      'css/*.css'\n    ],\n    filename: 'fingerprint.php',\n    template: \"<?php define('FINGERPRINT', '<%= fingerprint %>'); ?>\"\n  }\n}\n```\n\n## Changelog\n\nThe changelog can be found in the Changelog.md file.\n\n\n---\n\n## License\n\nThe MIT License, see the included `License.md` file.\n",
  "readmeFilename": "Readme.md",
  "_id": "grunt-fingerprint@0.2.0",
  "_from": "grunt-fingerprint@0.2.0"
}
